import java.io.File;
import java.io.FileReader;


class PdfToSvg_Pages {

//    public static void main(String[] args) {
//
//
////	String dirPath = "xC:/xampp/htdocs/CV-JS_2_3_6x/drawings/svg/xx";
////	String  pdfFile= "xC:/xampp/tomcat/webapps/CV-JS_2_3_6x/drawings/pdf/TD.pdf";
//
//	String dirPath = args[0];
//	String pdfFile = args[1];
//	String pdfFileName = args[2];
//
//
//		dirPath = dirPath.replaceAll("%20", " ");
//		pdfFile = pdfFile.replaceAll("%20", " ");
//		pdfFileName = pdfFileName.replaceAll("%20", " ");
//
//
//
//
//	try{
//		PDDocument document = PDDocument.load( pdfFile );
//		int pages = document.getNumberOfPages();
//
//		// make file with number of pages
//		String svgPages = dirPath+"/Pages.txt";
//
//		File f = new File(svgPages);
//		PrintWriter pw = new PrintWriter(new FileWriter(f));
//		pw.print(pages);
//		pw.close();
//
//
//		// 2018-03-20
//		//org.apache.fop.svg.PDFTranscoder.KEY_DEVICE_RESOLUTION = 300;
//
//
//	 // WE MAKE THE FIRST PAGE ONLY
//
//		DOMImplementation domImpl =
//			GenericDOMImplementation.getDOMImplementation();
//
//		// Create an instance of org.w3c.dom.Document.
//		String svgNS = "http://www.w3.org/2000/svg";
//		Document svgDocument = domImpl.createDocument(svgNS, "svg", null);
//
//		SVGGeneratorContext ctx = SVGGeneratorContext.createDefault(svgDocument);
//		// before 2018-12-13, this parameter was (true)  - default is false
//		ctx.setEmbeddedFontsOn(true);
//		ctx.setComment("Generated by CADViewer JS with Batik SVG Generator - fonts on false now true");
//
//
//		// test default 2018-12-13
////		ctx.setEmbeddedFontsOn(false);
//
//
//			for(int i = 0 ; i < 1 ; i++){
//				String svgFName = dirPath+"/"+ pdfFileName + "_" +(i+1)+"_org.svg";
//				(new File(svgFName)).createNewFile();
//
//				System.out.println("created: "+svgFName);
//
//				// Create an instance of the SVG Generator.
////				SVGGraphics2D svgGenerator = new SVGGraphics2D(ctx,false);
//
//
////				SVGGraphics2D svgGenerator = new SVGGraphics2D(ctx, Options.getBoolean("EMBEDDED_SVG_FONTS", true));
//				SVGGraphics2D svgGenerator = new SVGGraphics2D(ctx, true);
//
//
//				Printable page  = document.getPrintable(i);
//
//				//PDFPrintable pdfpage = new PDFPrintable(document, 1, false, 300, true);
//
///*
//				PageFormat myFormat = document.getPageFormat(i);
//
//				int cvjs_printPixelWidth = 3508;   // A2 - 300 dpi
//				int cvjs_printPixelHeight = 2480;   // A2 - 300 dpi
//
//
//				Paper paper = new Paper ();
//				paper.setSize(cvjs_printPixelHeight, cvjs_printPixelWidth);
//				paper.setImageableArea(0, 0, paper.getWidth(), paper.getHeight());
//				//paper.setImageableArea(0.5 * 72, 0.0 * 72, 7.5 * 72, 10.5 * 72);
//				myFormat.setPaper(paper);
//
////				int dpi = 300;
////				HashPrintRequestAttributeSet set = new HashPrintRequestAttributeSet();
////				PrinterResolution pr = new PrinterResolution((int) (dpi), (int) (dpi), ResolutionSyntax.DPI);
////				page.add(pr);
//
//				page.print(svgGenerator, myFormat, i);
//
//*/
//
//
//				page.print(svgGenerator, document.getPageFormat(i), i);
//
//
//
//				boolean useCSS = true;
//				svgGenerator.stream(svgFName, useCSS);
//
//				// reading up the file, remove crispEdges and saving again
//
//				String content = readFile(svgFName);
//				String noCrispEdges = content.replaceAll("shape-rendering=\"crispEdges\"", "");
//				noCrispEdges = noCrispEdges.replaceAll("shape-rendering:crispEdges;", "");
//				// now we make the real file
//				svgFName = dirPath+"/"+ pdfFileName + "_" +(i+1)+".svg";
//
//				// overwrite the old file
//				f = new File(svgFName);
//				pw = new PrintWriter(new FileWriter(f));
//				pw.print(noCrispEdges);
//				pw.close();
//
//
//				svgFName = dirPath+"/"+ pdfFileName + "_" +(i+1)+"_org.svg";
//				try {
//					File filePath = new File(svgFName);
//					filePath.delete();
//				} catch (Exception x) {
//					System.out.println(x);
//				}
//
//
//		}
//
//	}
//	catch(Exception e){
//
//		System.out.println("Exception: "+e);
//
//		}
//
//    }
	
	

	public static String readFile(String filename)
{
    String content = null;
    File file = new File(filename); //for ex foo.txt
    FileReader reader = null;
    try {
        reader = new FileReader(file);
        char[] chars = new char[(int) file.length()];
        reader.read(chars);
        content = new String(chars);
        reader.close();

    }catch (Exception e) {
        e.printStackTrace();
    }
    return content;
}

	
	
}

